plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'org.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    // AWS
    implementation platform('software.amazon.awssdk:bom:2.21.29')
    // Amazon S3 파일 업로드/다운로드/삭제 기능을 위한 클라이언트 라이브러리
    implementation 'software.amazon.awssdk:s3:2.31.7'
    implementation 'software.amazon.awssdk:rds'
    implementation 'software.amazon.awssdk:auth'
    implementation 'software.amazon.awssdk:aws-core'
    implementation 'software.amazon.awssdk:regions'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // 테스트가 실행된 후에만 리포트 생성 가능
    reports {
        xml.required = true // XML 리포트 생성 (CI에서 사용 가능)
        html.required = true // HTML 리포트 생성 (시각화)
    }
}

tasks.named("jacocoTestCoverageVerification", JacocoCoverageVerification) {
    // test가 먼저 실행된 후 검증하도록 보장
    dependsOn test

    violationRules {
        rule {
            element = 'BUNDLE'
            includes = ['org.project.monewping.domain.*'] // 수정 필요
            limit {
                counter = 'LINE'
                value   = 'COVEREDRATIO'
                minimum = 0.60
            }
        }
    }
}

tasks.check {
    dependsOn tasks.named("jacocoTestCoverageVerification")
}

